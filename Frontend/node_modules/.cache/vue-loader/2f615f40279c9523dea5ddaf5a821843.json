{"remainingRequest":"/Users/narumonthongbor/Desktop/Narumon/ข้อสอบ/Covid19_Node_Vue/Frontend/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/narumonthongbor/Desktop/Narumon/ข้อสอบ/Covid19_Node_Vue/Frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/narumonthongbor/Desktop/Narumon/ข้อสอบ/Covid19_Node_Vue/Frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/narumonthongbor/Desktop/Narumon/ข้อสอบ/Covid19_Node_Vue/Frontend/src/views/Register.vue?vue&type=template&id=63ae9146&scoped=true&","dependencies":[{"path":"/Users/narumonthongbor/Desktop/Narumon/ข้อสอบ/Covid19_Node_Vue/Frontend/src/views/Register.vue","mtime":1677655619690},{"path":"/Users/narumonthongbor/Desktop/Narumon/ข้อสอบ/Covid19_Node_Vue/Frontend/node_modules/cache-loader/dist/cjs.js","mtime":1677655719795},{"path":"/Users/narumonthongbor/Desktop/Narumon/ข้อสอบ/Covid19_Node_Vue/Frontend/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1677655720189},{"path":"/Users/narumonthongbor/Desktop/Narumon/ข้อสอบ/Covid19_Node_Vue/Frontend/node_modules/cache-loader/dist/cjs.js","mtime":1677655719795},{"path":"/Users/narumonthongbor/Desktop/Narumon/ข้อสอบ/Covid19_Node_Vue/Frontend/node_modules/vue-loader/lib/index.js","mtime":1677655720147}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { staticClass: \"register\" }, [\n    _c(\"img\", {\n      staticClass: \"img-logo\",\n      attrs: { src: \"/img/logo.svg\", alt: \"Logo\" }\n    }),\n    _c(\"div\", { staticClass: \"card\" }, [\n      _c(\"h1\", { staticClass: \"card-header\" }, [\n        _vm._v(\"\\n            REGISTER\\n        \")\n      ]),\n      _c(\"div\", { staticClass: \"card-body\" }, [\n        _c(\n          \"form\",\n          {\n            on: {\n              submit: function($event) {\n                $event.preventDefault()\n                _vm.onSubmit()\n              }\n            }\n          },\n          [\n            _c(\"div\", { staticClass: \"form-group\" }, [\n              _c(\"label\", { attrs: { for: \"\" } }, [_vm._v(\"ชื่อผู้ใช้งาน\")]),\n              _c(\"input\", {\n                directives: [\n                  {\n                    name: \"validate\",\n                    rawName: \"v-validate\",\n                    value: { required: true, regex: /^[A-Za-z0-9]{6,15}$/ },\n                    expression:\n                      \"{ required: true, regex: /^[A-Za-z0-9]{6,15}$/ }\"\n                  },\n                  {\n                    name: \"model\",\n                    rawName: \"v-model.trim\",\n                    value: _vm.form.u_username,\n                    expression: \"form.u_username\",\n                    modifiers: { trim: true }\n                  }\n                ],\n                staticClass: \"form-control\",\n                class: { \"is-invalid\": _vm.errors.has(\"u_username\") },\n                attrs: { type: \"text\", name: \"u_username\" },\n                domProps: { value: _vm.form.u_username },\n                on: {\n                  input: function($event) {\n                    if ($event.target.composing) {\n                      return\n                    }\n                    _vm.$set(_vm.form, \"u_username\", $event.target.value.trim())\n                  },\n                  blur: function($event) {\n                    _vm.$forceUpdate()\n                  }\n                }\n              }),\n              _c(\"span\", { staticClass: \"invalid-feedback\" }, [\n                _vm._v(_vm._s(_vm.errors.first(\"u_username\")))\n              ])\n            ]),\n            _c(\"div\", { staticClass: \"form-group\" }, [\n              _c(\"label\", { attrs: { for: \"\" } }, [_vm._v(\"รหัสผ่าน\")]),\n              _c(\"input\", {\n                directives: [\n                  {\n                    name: \"validate\",\n                    rawName: \"v-validate\",\n                    value: { required: true, regex: /^[A-Za-z0-9]{6,15}$/ },\n                    expression:\n                      \"{ required: true, regex: /^[A-Za-z0-9]{6,15}$/ }\"\n                  },\n                  {\n                    name: \"model\",\n                    rawName: \"v-model.trim\",\n                    value: _vm.form.u_password,\n                    expression: \"form.u_password\",\n                    modifiers: { trim: true }\n                  }\n                ],\n                staticClass: \"form-control\",\n                class: { \"is-invalid\": _vm.errors.has(\"u_password\") },\n                attrs: { type: \"password\", name: \"u_password\" },\n                domProps: { value: _vm.form.u_password },\n                on: {\n                  input: function($event) {\n                    if ($event.target.composing) {\n                      return\n                    }\n                    _vm.$set(_vm.form, \"u_password\", $event.target.value.trim())\n                  },\n                  blur: function($event) {\n                    _vm.$forceUpdate()\n                  }\n                }\n              }),\n              _c(\"span\", { staticClass: \"invalid-feedback\" }, [\n                _vm._v(_vm._s(_vm.errors.first(\"u_password\")))\n              ])\n            ]),\n            _c(\"div\", { staticClass: \"form-group\" }, [\n              _c(\"label\", { attrs: { for: \"\" } }, [_vm._v(\"ชื่อ\")]),\n              _c(\"input\", {\n                directives: [\n                  {\n                    name: \"validate\",\n                    rawName: \"v-validate\",\n                    value: \"required\",\n                    expression: \"'required'\"\n                  },\n                  {\n                    name: \"model\",\n                    rawName: \"v-model.trim\",\n                    value: _vm.form.u_firstname,\n                    expression: \"form.u_firstname\",\n                    modifiers: { trim: true }\n                  }\n                ],\n                staticClass: \"form-control\",\n                class: { \"is-invalid\": _vm.errors.has(\"u_firstname\") },\n                attrs: { type: \"text\", name: \"u_firstname\" },\n                domProps: { value: _vm.form.u_firstname },\n                on: {\n                  input: function($event) {\n                    if ($event.target.composing) {\n                      return\n                    }\n                    _vm.$set(\n                      _vm.form,\n                      \"u_firstname\",\n                      $event.target.value.trim()\n                    )\n                  },\n                  blur: function($event) {\n                    _vm.$forceUpdate()\n                  }\n                }\n              }),\n              _c(\"span\", { staticClass: \"invalid-feedback\" }, [\n                _vm._v(_vm._s(_vm.errors.first(\"u_firstname\")))\n              ])\n            ]),\n            _c(\"div\", { staticClass: \"form-group\" }, [\n              _c(\"label\", { attrs: { for: \"\" } }, [_vm._v(\"นามสกุล\")]),\n              _c(\"input\", {\n                directives: [\n                  {\n                    name: \"validate\",\n                    rawName: \"v-validate\",\n                    value: \"required\",\n                    expression: \"'required'\"\n                  },\n                  {\n                    name: \"model\",\n                    rawName: \"v-model.trim\",\n                    value: _vm.form.u_lastname,\n                    expression: \"form.u_lastname\",\n                    modifiers: { trim: true }\n                  }\n                ],\n                staticClass: \"form-control\",\n                class: { \"is-invalid\": _vm.errors.has(\"u_lastname\") },\n                attrs: { type: \"text\", name: \"u_lastname\" },\n                domProps: { value: _vm.form.u_lastname },\n                on: {\n                  input: function($event) {\n                    if ($event.target.composing) {\n                      return\n                    }\n                    _vm.$set(_vm.form, \"u_lastname\", $event.target.value.trim())\n                  },\n                  blur: function($event) {\n                    _vm.$forceUpdate()\n                  }\n                }\n              }),\n              _c(\"span\", { staticClass: \"invalid-feedback\" }, [\n                _vm._v(_vm._s(_vm.errors.first(\"u_lastname\")))\n              ])\n            ]),\n            _vm.errorMessage\n              ? _c(\"div\", { staticClass: \"alert alert-warning text-center\" }, [\n                  _vm._v(\n                    \"\\n                    \" +\n                      _vm._s(_vm.errorMessage) +\n                      \"\\n                \"\n                  )\n                ])\n              : _vm._e(),\n            _c(\"div\", { staticClass: \"form-group buttons\" }, [\n              _c(\n                \"button\",\n                {\n                  staticClass: \"btn btn-info btn-block\",\n                  attrs: { type: \"submit\" }\n                },\n                [\n                  _vm._v(\n                    \"\\n                        ลงทะเบียน\\n                    \"\n                  )\n                ]\n              ),\n              _c(\n                \"button\",\n                {\n                  staticClass: \"btn btn-secondary btn-block\",\n                  attrs: { type: \"button\" },\n                  on: {\n                    click: function($event) {\n                      _vm.onRedirectToLogin()\n                    }\n                  }\n                },\n                [\n                  _vm._v(\n                    \"\\n                        เข้าสู่ระบบ\\n                    \"\n                  )\n                ]\n              )\n            ])\n          ]\n        )\n      ])\n    ])\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}