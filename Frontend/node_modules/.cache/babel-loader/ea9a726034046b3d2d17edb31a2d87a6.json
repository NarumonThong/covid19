{"remainingRequest":"/Users/narumonthongbor/Desktop/Narumon/ข้อสอบ/Covid19_Node_Vue/Frontend/node_modules/thread-loader/dist/cjs.js!/Users/narumonthongbor/Desktop/Narumon/ข้อสอบ/Covid19_Node_Vue/Frontend/node_modules/babel-loader/lib/index.js!/Users/narumonthongbor/Desktop/Narumon/ข้อสอบ/Covid19_Node_Vue/Frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/narumonthongbor/Desktop/Narumon/ข้อสอบ/Covid19_Node_Vue/Frontend/src/views/Home.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/narumonthongbor/Desktop/Narumon/ข้อสอบ/Covid19_Node_Vue/Frontend/src/views/Home.vue","mtime":1677823283090},{"path":"/Users/narumonthongbor/Desktop/Narumon/ข้อสอบ/Covid19_Node_Vue/Frontend/node_modules/cache-loader/dist/cjs.js","mtime":1677655719795},{"path":"/Users/narumonthongbor/Desktop/Narumon/ข้อสอบ/Covid19_Node_Vue/Frontend/node_modules/thread-loader/dist/cjs.js","mtime":1677655719764},{"path":"/Users/narumonthongbor/Desktop/Narumon/ข้อสอบ/Covid19_Node_Vue/Frontend/node_modules/babel-loader/lib/index.js","mtime":1677655720009},{"path":"/Users/narumonthongbor/Desktop/Narumon/ข้อสอบ/Covid19_Node_Vue/Frontend/node_modules/vue-loader/lib/index.js","mtime":1677655720147}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapState } from \"vuex\";\nimport Axios from \"axios\";\nexport default {\n  data: function data() {\n    return {\n      chartOptions: {\n        chart: {\n          id: 'vuechart-example'\n        },\n        xaxis: {\n          categories: ['South Korea', 'Canada', 'United Kingdom', 'Netherlands', 'Italy', 'France', 'Japan', 'United States', 'China', 'India']\n        },\n        plotOptions: {\n          bar: {\n            barHeight: '100%',\n            distributed: true,\n            horizontal: true,\n            dataLabels: {\n              position: 'bottom'\n            }\n          }\n        },\n        // colors: ['#33b2df', '#546E7A', '#d4526e', '#13d8aa', '#A5978B', '#2b908f', '#f9a3a4', '#90ee7e',\n        //     '#f48024', '#69d2e7'\n        //   ],\n        dataLabels: {\n          enabled: true,\n          textAnchor: 'start',\n          style: {\n            colors: ['#000'],\n            fontSize: '8px',\n            fontWeight: 300\n          },\n          formatter: function formatter(val, opt) {\n            return opt.w.globals.labels[opt.dataPointIndex] + \":  \" + val;\n          },\n          offsetX: 0,\n          dropShadow: {\n            enabled: true\n          }\n        }\n      },\n      series: [{\n        name: 'cases',\n        data: [100, 500, 1000, 1500, 2000, 3000, 4000, 5000]\n      }]\n    };\n  },\n  mounted: function mounted() {\n    this.initialLoadItem();\n  },\n  methods: {\n    initialLoadItem: function initialLoadItem() {\n      var _this = this;\n\n      Axios.get(\"/api/covid\").then(function (response) {\n        _this.series = [{\n          data: response.data.map(function (index) {\n            return index.cases;\n          })\n        }];\n        _this.chartOptions = {\n          xaxis: {\n            categories: response.data.map(function (index) {\n              return index.state;\n            })\n          } // this.$refs.radar.updateSeries([{\n          //       name: 'Series 1',\n          //       data: [your_new_data_here] //ie [1,2,3,4]\n          // }])\n          // this.$refs.radar.updateOptions({\n          //       xaxis: {\n          //         categories: [your_new_categories_here] //ie [\"a\",\"b\",\"c\",\"d\"]\n          //       }\n          // })\n          // this.xaxis = [{\n          //   categories: response.data.map(\n          //     function(index) {\n          //       return index.cases\n          //     }\n          //   )\n          // }],\n          // this.series = [{\n          //   data: response.data.map(\n          //     function(index) {\n          //       return index.cases\n          //     }\n          //   )\n          // }]\n          // console.log('AAA', )\n\n        };\n        console.log(response.data.map(function (index) {\n          return index.state;\n        })), console.log(response.data.map(function (index) {\n          return index.cases;\n        }));\n      }).catch(function (err) {\n        _this.alertify.error(err.response.data.message);\n      });\n    }\n  }\n};",{"version":3,"sources":["Home.vue"],"names":[],"mappings":";;;;;;;;;;;;;AAcA,SAAA,QAAA,QAAA,MAAA;AACA,OAAA,KAAA,MAAA,OAAA;AACA,eAAA;AACA,MADA,kBACA;AACA,WAAA;AACA,oBAAA;AACA,eAAA;AACA,cAAA;AADA,SADA;AAIA,eAAA;AACA,sBAAA,CAAA,aAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,aAAA,EAAA,OAAA,EAAA,QAAA,EAAA,OAAA,EACA,eADA,EACA,OADA,EACA,OADA;AADA,SAJA;AASA,qBAAA;AACA,eAAA;AACA,uBAAA,MADA;AAEA,yBAAA,IAFA;AAGA,wBAAA,IAHA;AAIA,wBAAA;AACA,wBAAA;AADA;AAJA;AADA,SATA;AAmBA;AACA;AACA;AAEA,oBAAA;AACA,mBAAA,IADA;AAEA,sBAAA,OAFA;AAGA,iBAAA;AACA,oBAAA,CAAA,MAAA,CADA;AAEA,sBAAA,KAFA;AAGA,wBAAA;AAHA,WAHA;AASA,qBAAA,mBAAA,GAAA,EAAA,GAAA,EAAA;AACA,mBAAA,IAAA,CAAA,CAAA,OAAA,CAAA,MAAA,CAAA,IAAA,cAAA,IAAA,KAAA,GAAA,GAAA;AACA,WAXA;AAYA,mBAAA,CAZA;AAaA,sBAAA;AACA,qBAAA;AADA;AAbA;AAvBA,OADA;AA0CA,cAAA,CAAA;AACA,cAAA,OADA;AAEA,cAAA,CAAA,GAAA,EAAA,GAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA;AAFA,OAAA;AA1CA,KAAA;AA+CA,GAjDA;AAkDA,SAlDA,qBAkDA;AACA,SAAA,eAAA;AACA,GApDA;AAqDA,WAAA;AACA,mBADA,6BACA;AAAA;;AACA,YAAA,GAAA,eACA,IADA,CACA,oBAAA;AAEA,cAAA,MAAA,GAAA,CAAA;AACA,gBAAA,SAAA,IAAA,CAAA,GAAA,CACA,UAAA,KAAA,EAAA;AACA,mBAAA,MAAA,KAAA;AACA,WAHA;AADA,SAAA,CAAA;AAOA,cAAA,YAAA,GAAA;AACA,iBAAA;AACA,wBAAA,SAAA,IAAA,CAAA,GAAA,CACA,UAAA,KAAA,EAAA;AACA,qBAAA,MAAA,KAAA;AACA,aAHA;AADA,WADA,CAUA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAlCA,SAAA;AAmCA,gBAAA,GAAA,CAAA,SAAA,IAAA,CAAA,GAAA,CACA,UAAA,KAAA,EAAA;AACA,iBAAA,MAAA,KAAA;AACA,SAHA,CAAA,GAKA,QAAA,GAAA,CAAA,SAAA,IAAA,CAAA,GAAA,CACA,UAAA,KAAA,EAAA;AACA,iBAAA,MAAA,KAAA;AACA,SAHA,CAAA,CALA;AAUA,OAvDA,EAwDA,KAxDA,CAwDA,eAAA;AACA,cAAA,QAAA,CAAA,KAAA,CAAA,IAAA,QAAA,CAAA,IAAA,CAAA,OAAA;AACA,OA1DA;AA2DA;AA7DA;AArDA,CAAA","sourcesContent":["<template>\n  <div class=\"home\">\n    <div class=\"card text-center\">\n      <h1></h1>\n      <h6>Covid Global Caese By Worldometers</h6>\n      <apexchart type=\"bar\" :options=\"chartOptions\" :series=\"series\"></apexchart>\n    \n    </div>\n    \n    \n  </div>\n</template>\n\n<script>\nimport { mapState } from \"vuex\";\nimport Axios from \"axios\";\nexport default {\n  data() {\n    return {\n      chartOptions: {\n          chart: {\n            id: 'vuechart-example',\n          },\n          xaxis: {\n            categories: ['South Korea', 'Canada', 'United Kingdom', 'Netherlands', 'Italy', 'France', 'Japan',\n                'United States', 'China', 'India'\n              ],\n          },\n          plotOptions: {\n              bar: {\n                barHeight: '100%',\n                distributed: true,\n                horizontal: true,\n                dataLabels: {\n                  position: 'bottom'\n                },\n              }\n          },\n          // colors: ['#33b2df', '#546E7A', '#d4526e', '#13d8aa', '#A5978B', '#2b908f', '#f9a3a4', '#90ee7e',\n          //     '#f48024', '#69d2e7'\n          //   ],\n\n          dataLabels: {\n              enabled: true,\n              textAnchor: 'start',\n              style: {\n                colors: ['#000'],\n                fontSize: '8px',\n                fontWeight: 300\n                \n              },\n              formatter: function (val, opt) {\n                return opt.w.globals.labels[opt.dataPointIndex] + \":  \" + val\n              },\n              offsetX: 0,\n              dropShadow: {\n                enabled: true\n              }\n        },\n      },\n      series: [{\n          name: 'cases',\n          data: [100, 500, 1000, 1500, 2000, 3000, 4000, 5000]\n      }]\n    }\n  },\n  mounted() {\n    this.initialLoadItem();\n  },\n  methods: {\n    initialLoadItem() {\n      Axios.get(`/api/covid`)\n        .then(response => {\n\n          this.series = [{\n            data: response.data.map(\n              function(index) {\n                return index.cases\n              }\n            )\n          }]\n          this.chartOptions = {\n            xaxis: {\n              categories: response.data.map(\n                function(index) {\n                  return index.state\n                }\n              )\n            }\n          }\n\n          // this.$refs.radar.updateSeries([{\n          //       name: 'Series 1',\n          //       data: [your_new_data_here] //ie [1,2,3,4]\n          // }])\n\n          // this.$refs.radar.updateOptions({\n          //       xaxis: {\n          //         categories: [your_new_categories_here] //ie [\"a\",\"b\",\"c\",\"d\"]\n          //       }\n          // })\n          // this.xaxis = [{\n          //   categories: response.data.map(\n          //     function(index) {\n          //       return index.cases\n          //     }\n          //   )\n          // }],\n          // this.series = [{\n          //   data: response.data.map(\n          //     function(index) {\n          //       return index.cases\n          //     }\n          //   )\n          // }]\n          // console.log('AAA', )\n          console.log(response.data.map(\n            function(index) {\n              return index.state\n            }\n          )),\n          console.log(response.data.map(\n            function(index) {\n              return index.cases\n            }\n          ))\n        })\n        .catch(err => {\n          this.alertify.error(err.response.data.message);\n        });\n    }\n  },\n};\n</script>\n"],"sourceRoot":"src/views"}]}